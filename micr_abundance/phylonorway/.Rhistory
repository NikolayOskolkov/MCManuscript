x <- MASS::mvrnorm(100, rep(0,3), Sigma)
#umap.out <- umap(log10(x + abs(min(x)) + 1), n_neighbors = 10, pca = 3, min_dist = 0.3,
#                 metric = "euclidean", init = "pca", verbose = TRUE, n_threads = 4)
umap.out <- umap(as.matrix(dist(x)), n_neighbors = 15, min_dist = 0.3,
metric = "euclidean", init = "spectral", verbose = TRUE, n_threads = 4)
plot(umap.out[,1], umap.out[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(umap.out[,1], umap.out[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("uwot")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
#umap.out <- umap(log10(x + abs(min(x)) + 1), n_neighbors = 10, pca = 3, min_dist = 0.3,
#                 metric = "euclidean", init = "pca", verbose = TRUE, n_threads = 4)
umap.out <- umap(as.matrix(dist(x)), n_neighbors = 10, min_dist = 0.3,
metric = "euclidean", init = "spectral", verbose = TRUE, n_threads = 4)
plot(umap.out[,1], umap.out[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(umap.out[,1], umap.out[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("uwot")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
#umap.out <- umap(log10(x + abs(min(x)) + 1), n_neighbors = 10, pca = 3, min_dist = 0.3,
#                 metric = "euclidean", init = "pca", verbose = TRUE, n_threads = 4)
umap.out <- umap(as.matrix(dist(x)), n_neighbors = 10, min_dist = 0.3,
metric = "euclidean", init = "pca", verbose = TRUE, n_threads = 4)
plot(umap.out[,1], umap.out[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(umap.out[,1], umap.out[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
u <- umap(as.matrix(dist(x)))
#u <- umap(x)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(1000, rep(0,3), Sigma)
u <- umap(as.matrix(dist(x)))
#u <- umap(x)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 10, 10); diag(Sigma) <- 1
x <- MASS::mvrnorm(1000, rep(0,10), Sigma)
u <- umap(as.matrix(dist(x)))
#u <- umap(x)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 100, 100); diag(Sigma) <- 1
x <- MASS::mvrnorm(1000, rep(0,100), Sigma)
u <- umap(as.matrix(dist(x)))
#u <- umap(x)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 100, 100); diag(Sigma) <- 1
x <- MASS::mvrnorm(1000, rep(0,100), Sigma)
#u <- umap(as.matrix(dist(x)))
u <- umap(x)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 100, 100); diag(Sigma) <- 1
x <- MASS::mvrnorm(1000, rep(0,100), Sigma)
pca<-prcomp(as.matrix(dist(x)))
#pca<-prcomp(x)
plot(pca$x[,1], pca$x[,2], type = "n", xlab = "PC1", ylab = "PC2")
text(pca$x[,1], pca$x[,2], labels = ranks, col = colormap, cex = 0.5)
}
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
pca<-prcomp(as.matrix(dist(x)))
#pca<-prcomp(x)
plot(pca$x[,1], pca$x[,2], type = "n", xlab = "PC1", ylab = "PC2")
text(pca$x[,1], pca$x[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
u <- umap(as.matrix(dist(x)))
#u <- umap(x)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
pca<-prcomp(as.matrix(dist(x)))
#pca<-prcomp(x)
plot(pca$x[,1], pca$x[,2], type = "n", xlab = "PC1", ylab = "PC2")
text(pca$x[,1], pca$x[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
#u <- umap(as.matrix(dist(x)))
u <- umap(x)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
#pca<-prcomp(as.matrix(dist(x)))
pca<-prcomp(x)
plot(pca$x[,1], pca$x[,2], type = "n", xlab = "PC1", ylab = "PC2")
text(pca$x[,1], pca$x[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("uwot")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
umap.out <- umap(log10(x + abs(min(x)) + 1), n_neighbors = 10, pca = 3, min_dist = 0.3,
metric = "euclidean", init = "pca", verbose = TRUE, n_threads = 4)
#umap.out <- umap(as.matrix(dist(x)), n_neighbors = 15, min_dist = 0.1,
#                 metric = "euclidean", init = "spectral", verbose = TRUE, n_threads = 4)
plot(umap.out[,1], umap.out[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(umap.out[,1], umap.out[,2], labels = ranks, col = colormap, cex = 0.5)
}
############################# PCA #################################
pca<-prcomp(as.matrix(dist(x)))
#pca<-prcomp(x)
plot(pca$x[,1], pca$x[,2], type = "n", xlab = "PC1", ylab = "PC2")
text(pca$x[,1], pca$x[,2], labels = ranks, col = colormap, cex = 1.5)
summary(pca)
summary(pca)$importance[2,]
barplot(summary(pca)$importance[2,])
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
u <- umap(as.matrix(dist(x)))
#u <- umap(x)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
#u <- umap(as.matrix(dist(x)))
#u <- umap(x)
u <- umap(prcomp(as.matrix(dist(x)))$x[,1:10])
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
#u <- umap(as.matrix(dist(x)))
#u <- umap(x)
u <- umap(prcomp(as.matrix(dist(x)))$x[,1:5])
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
#u <- umap(as.matrix(dist(x)))
#u <- umap(x)
u <- umap(prcomp(as.matrix(dist(x)))$x[,1:3])
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 1000, 1000); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,1000), Sigma)
u <- umap(as.matrix(dist(x)))
#u <- umap(x)
#u <- umap(prcomp(as.matrix(dist(x)))$x[,1:3])
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
par(mfrow=c(3,3))
for(i in 1:9)
{
set.seed(i)
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(10000, rep(0,3), Sigma)
u <- umap(as.matrix(dist(x)))
#u <- umap(x)
#u <- umap(prcomp(as.matrix(dist(x)))$x[,1:3])
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "UMAP1", ylab = "UMAP2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
}
library("umap")
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
custom.settings <- umap.defaults
custom.settings$input <- "dist"
custom.settings
umap.defaults
u <- umap(as.matrix(dist(x)), config = custom.settings)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "dim1", ylab = "dim2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
library("umap")
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
custom.settings <- umap.defaults
custom.settings$input <- "dist"
u <- umap(as.matrix(dist(x)), config = custom.settings)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "dim1", ylab = "dim2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
library("umap")
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
custom.settings <- umap.defaults
custom.settings$input <- "dist"
u <- umap(as.matrix(dist(x)), config = custom.settings)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "dim1", ylab = "dim2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
library("umap")
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
custom.settings <- umap.defaults
custom.settings$input <- "dist"
u <- umap(as.matrix(dist(x)), config = custom.settings)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "dim1", ylab = "dim2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
library("umap")
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
custom.settings <- umap.defaults
custom.settings$input <- "dist"
u <- umap(as.matrix(dist(x)), config = custom.settings)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "dim1", ylab = "dim2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
library("umap")
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
custom.settings <- umap.defaults
custom.settings$input <- "dist"
u <- umap(as.matrix(dist(x)), config = custom.settings)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "dim1", ylab = "dim2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
library("umap")
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
custom.settings <- umap.defaults
custom.settings$input <- "dist"
u <- umap(as.matrix(dist(x)), config = custom.settings)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "dim1", ylab = "dim2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
library("umap")
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
custom.settings <- umap.defaults
custom.settings$input <- "dist"
u <- umap(as.matrix(dist(x)), config = custom.settings)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "dim1", ylab = "dim2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
library("umap")
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
custom.settings <- umap.defaults
custom.settings$input <- "dist"
u <- umap(as.matrix(dist(x)), config = custom.settings)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
plot(u$layout[,1], u$layout[,2], type = "n", xlab = "dim1", ylab = "dim2")
text(u$layout[,1], u$layout[,2], labels = ranks, col = colormap, cex = 0.5)
#library("umap")
Sigma <- matrix(.8, 3, 3); diag(Sigma) <- 1
x <- MASS::mvrnorm(100, rep(0,3), Sigma)
ranks <- rank(rowMeans(x))
colors <- colorRampPalette(c("blue", "red"))(nrow(x))
colormap <- colors[ranks]
#custom.settings <- umap.defaults
#custom.settings$input <- "dist"
#u <- umap(as.matrix(dist(x)), config = custom.settings)
library("uwot")
umap.out <- umap(as.matrix(dist(x)),
metric = "precomputed", verbose = TRUE, n_threads = 4)
update.packages("uwot")
#custom.settings <- umap.defaults
#custom.settings$input <- "dist"
#u <- umap(as.matrix(dist(x)), config = custom.settings)
library("uwot")
umap.out <- umap(as.matrix(dist(x)),
metric = "precomputed", verbose = TRUE, n_threads = 4)
if (!require(remotes)) { install.packages("remotes") }
remotes::install_github("fbreitwieser/pavian")
pavian::runApp(port=5000)
pavian::runApp(port=5000)
library("igraph")
# Create a random graph (for demonstration purposes)
set.seed(123)  # For reproducibility
g <- erdos.renyi.game(100, p = 0.05, directed = FALSE)
# Compute Louvain clustering
louvain_clusters <- cluster_louvain(g)
# Print cluster membership
membership(louvain_clusters)
# Plot the graph with clusters
plot(g, vertex.color = membership(louvain_clusters), vertex.size = 5,
main = "Louvain Clustering", vertex.label = NA)
g
##################################### MAMMALS #####################################################
setwd("/home/nikolay/WABI/T_van_der_Valk/Manuscript/contamination_paper/micr_abundance/mammals/")
####################################### PHYLONORWAY ###########################################
setwd("/home/nikolay/WABI/T_van_der_Valk/Manuscript/contamination_paper/micr_abundance/phylonorway/")
abund<-read.delim("micr_abund_matrix_top10_phylonorway.txt",header=TRUE,
row.names=1,check.names=FALSE,sep="\t")
abund<-subset(abund,select=colnames(abund)[colSums(abund)!=0])
abund[1:5,1:5]
Path<-"/home/nikolay/WABI/T_van_der_Valk/contaminated_genomes/RESULTS_WITH_MULTIMAPPERS/"
annot<-read.delim(paste0(Path,"RESULTS_PHYLONORWAY/1323_plant_phylonorway_sorted_by_BOC.txt"),
header=TRUE,sep="\t")
annot<-annot[1:200,]
abund<-subset(abund,select=colnames(abund)[colnames(abund)%in%as.character(annot$IDS)])
colnames(abund)<-as.character(annot$ORGANISM)[match(colnames(abund),as.character(annot$IDS))]
micr_annot<-read.delim("/home/nikolay/WABI/T_van_der_Valk/scripts/GTDB_fna2name.txt",
header=FALSE,sep="\t")
rownames(abund)<-as.character(micr_annot$V3)[match(rownames(abund),as.character(micr_annot$V1))]
#remove rare microbes
abund<-abund[,is.na(colnames(abund))==FALSE]
abund<-abund[rowSums(abund!=0)>0,]
abund<-subset(abund,select=colnames(abund)[colSums(abund,na.rm=TRUE)!=0])
abund[1:5,1:5]
abund[,"Hippuris vulgaris"]
####################################### PHYLONORWAY ###########################################
setwd("/home/nikolay/WABI/T_van_der_Valk/Manuscript/contamination_paper/micr_abundance/phylonorway/")
abund<-read.delim("micr_abund_matrix_top10_phylonorway.txt",header=TRUE,
row.names=1,check.names=FALSE,sep="\t")
abund<-subset(abund,select=colnames(abund)[colSums(abund)!=0])
abund[1:5,1:5]
Path<-"/home/nikolay/WABI/T_van_der_Valk/contaminated_genomes/RESULTS_WITH_MULTIMAPPERS/"
annot<-read.delim(paste0(Path,"RESULTS_PHYLONORWAY/1323_plant_phylonorway_sorted_by_BOC.txt"),
header=TRUE,sep="\t")
abund<-subset(abund,select=colnames(abund)[colnames(abund)%in%as.character(annot$IDS)])
colnames(abund)<-as.character(annot$ORGANISM)[match(colnames(abund),as.character(annot$IDS))]
micr_annot<-read.delim("/home/nikolay/WABI/T_van_der_Valk/scripts/GTDB_fna2name.txt",
header=FALSE,sep="\t")
rownames(abund)<-as.character(micr_annot$V3)[match(rownames(abund),as.character(micr_annot$V1))]
#remove rare microbes
abund<-abund[,is.na(colnames(abund))==FALSE]
abund<-abund[rowSums(abund!=0)>0,]
abund<-subset(abund,select=colnames(abund)[colSums(abund,na.rm=TRUE)!=0])
abund[1:5,1:5]
abund[,"Hippuris vulgaris"]
abund[,grepl("Hippuris",colnames(abund))]
dim(aund)
dim(abund)
colnames(abund)
abund<-read.delim("micr_abund_matrix_top10_phylonorway.txt",header=TRUE,
row.names=1,check.names=FALSE,sep="\t")
dim(abund)
abund[1:5,1:5]
####################################### PHYLONORWAY ###########################################
setwd("/home/nikolay/WABI/T_van_der_Valk/Manuscript/contamination_paper/micr_abundance/phylonorway/")
abund<-read.delim("micr_abund_matrix_top10_phylonorway.txt",header=TRUE,
row.names=1,check.names=FALSE,sep="\t")
abund<-subset(abund,select=colnames(abund)[colSums(abund)!=0])
abund[1:5,1:5]
Path<-"/home/nikolay/WABI/T_van_der_Valk/contaminated_genomes/RESULTS_WITH_MULTIMAPPERS/"
annot<-read.delim(paste0(Path,"RESULTS_PHYLONORWAY/1323_plant_phylonorway_sorted_by_BOC.txt"),
header=TRUE,sep="\t")
head(annot)
abund<-subset(abund,select=colnames(abund)[colnames(abund)%in%as.character(annot$IDS)])
colnames(abund)<-as.character(annot$ORGANISM)[match(colnames(abund),as.character(annot$IDS))]
micr_annot<-read.delim("/home/nikolay/WABI/T_van_der_Valk/scripts/GTDB_fna2name.txt",
header=FALSE,sep="\t")
rownames(abund)<-as.character(micr_annot$V3)[match(rownames(abund),as.character(micr_annot$V1))]
abund[1:5,1:5]
dim(abund)
abund[,grepl("Hippuris",colnames(abund))]
colnames(abund)[grepl("Hippuris",colnames(abund))]
abund<-read.delim("micr_abund_matrix_top10_phylonorway.txt",header=TRUE,
row.names=1,check.names=FALSE,sep="\t")
abund[1:5,1:5]
colnames(abund)[grepl("39321",colnames(abund))]
